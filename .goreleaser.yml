---
project_name: terraform-provider-corefunc
dist: ./dist

# https://goreleaser.com/customization/reportsizes/
report_sizes: true

before:
  hooks:
    - make tidy

# https://goreleaser.com/customization/builds/
builds:
  - env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w -X github.com/northwood-labs/terraform-provider-corefunc/cmd.Version={{.Version}}
    goos:
      - freebsd
      - openbsd
      - solaris
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - '386'
      - arm
      - arm64
    ignore:
      - goos: darwin
        goarch: '386'
      - goos: openbsd
        goarch: arm
      - goos: openbsd
        goarch: arm64
    binary: '{{ .ProjectName }}_v{{ .Version }}'

# https://goreleaser.com/customization/archive/
archives:
  - format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'

# https://goreleaser.com/customization/checksum/
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256

# https://goreleaser.com/customization/sign/
signs:
  - artifacts: checksum
    args:
      - --batch
      - --local-user
      - '{{ .Env.GPG_FINGERPRINT }}' # set this environment variable for your signing key
      - --output
      - ${signature}
      - --detach-sign
      - ${artifact}

# https://goreleaser.com/customization/release/
release:
  # Visit your project's GitHub Releases page to publish this release.
  draft: true
  prerelease: auto
  mode: replace
  extra_files:
    - glob: terraform-registry-manifest.json
      name_template: '{{ .ProjectName }}_{{ .Version }}_manifest.json'
  footer: |
    ## Asset Naming

    | Synonyms              | Description                  |
    |-----------------------|------------------------------|
    | `x86_64` and `amd64`  | 64-bit Intel and/or AMD CPUs |
    | `aarch64` and `arm64` | 64-bit ARM CPUs              |

  name_template: '{{.Version}} â€” {{time "2006-01-02"}}'

# https://goreleaser.com/customization/changelog/
changelog:
  skip: false
  use: git
  sort: asc
  abbrev: 0
  groups:
    - title: Features
      regexp: ^.*?feat(\([[:word:]]+\))??!?:.+$
      order: 0
    - title: Bug fixes
      regexp: ^.*?fix(\([[:word:]]+\))??!?:.+$
      order: 1
    - title: Refactoring
      regexp: ^.*?refactor(\([[:word:]]+\))??!?:.+$
      order: 2
    - title: Documentation
      regexp: ^.*?docs(\([[:word:]]+\))??!?:.+$
      order: 3
    - title: Chores
      regexp: ^.*?chore(\([[:word:]]+\))??!?:.+$
      order: 4
    - title: Continuous integration
      regexp: ^.*?ci(\([[:word:]]+\))??!?:.+$
      order: 5
    - title: Project building
      regexp: ^.*?build(\([[:word:]]+\))??!?:.+$
      order: 6
    - title: Linting and static analysis
      regexp: ^.*?build(\([[:word:]]+\))??!?:.+$
      order: 7
    - title: Release preparation
      regexp: ^.*?relprep(\([[:word:]]+\))??!?:.+$
      order: 8
    - title: Other
      order: 999
