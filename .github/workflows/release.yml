---
# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.

name: Release
on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: false
        type: string

permissions: read-all

jobs:
  release_job:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    name: GoReleaser
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            api.gumroad.com:443
            github.com:443
            goreleaser.com:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            sum.golang.org:443
            uploads.github.com:443

      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ">= 1.22.1"
          cache: true

      - name: Import GPG Signing Key
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6.2.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_KEY_B64 }}
          passphrase: ${{ secrets.GPG_PWD }}

      - name: Checkout tag
        if: ${{ github.event.inputs.version != '' }}
        run: |
          git checkout refs/tags/${{ github.event.inputs.version }}

      - name: GoReleaser Action
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean
