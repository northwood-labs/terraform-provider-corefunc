---
# This workflow uses actions that are not certified by GitHub. They are provided
# by a third-party and are governed by separate terms of service, privacy
# policy, and support documentation.

name: Tests
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  mutation:
    runs-on: ubuntu-latest
    name: Mutation
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            golang.org:443
            objects.githubusercontent.com:443
            proxy.golang.org:443

      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: ">= 1.22.1"
          cache: true

      - name: Run mutation tests
        run: |
          cd ./corefunc && go test -tags=mutation -count=1 -parallel=$(nproc) -timeout 30s -ooze.v=true \
            | grep -v "^[[:lower:]]" | grep -v "^)"

  unit:
    runs-on: ubuntu-latest
    name: Unit
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          disable-sudo: true
          egress-policy: block #audit
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            golang.org:443
            objects.githubusercontent.com:443
            proxy.golang.org:443

      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: ">= 1.22.1"
          cache: true

      - name: Run unit tests
        run: |
          go test -count=1 -parallel=$(nproc) -timeout 30s -v ./corefunc/...

  acc_terraform:
    runs-on: ubuntu-latest
    name: Acceptance (Terraform ${{ matrix.terraform_version }})

    strategy:
      fail-fast: false
      matrix:
        terraform_version:
          - "1.0"
          - "1.1"
          - "1.2"
          - "1.3"
          - "1.4"
          - "1.5"
          - "1.6"
          - "1.7"
          - "1.8"
          - "1.9"
          # - "1.10.0-beta"
          # - "1.11.0-alpha"

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          disable-sudo: true
          egress-policy: block # audit
          allowed-endpoints: >
            api.github.com:443
            checkpoint-api.hashicorp.com:443
            get.opentofu.org:443
            github.com:443
            golang.org:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            releases.hashicorp.com:443
            storage.googleapis.com:443

      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: ">= 1.22.1"
          cache: true

      - name: Install Terraform ${{ matrix.terraform_version }}
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ matrix.terraform_version }}
          terraform_wrapper: false

      - name: Run acceptance tests
        env:
          TF_ACC: 1
        run: |
          go test -run=TestAcc -count=1 -parallel=$(nproc) -timeout 30m -v ./corefuncprovider/...

  acc_opentofu:
    runs-on: ubuntu-latest
    name: Acceptance (OpenTofu ${{ matrix.opentofu_version }})

    strategy:
      fail-fast: false
      matrix:
        opentofu_version:
          - "1.6"
          - "1.7"
          - "1.8"
          - "1.9.0-alpha"

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c95a14d0e5bab51a9f56296a4eb0e416910cd350 # v2.10.3
        with:
          disable-sudo: true
          egress-policy: block # audit
          allowed-endpoints: >
            api.github.com:443
            checkpoint-api.hashicorp.com:443
            get.opentofu.org:443
            github.com:443
            golang.org:443
            objects.githubusercontent.com:443
            proxy.golang.org:443
            releases.hashicorp.com:443
            storage.googleapis.com:443

      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: ">= 1.22.1"
          cache: true

      - name: Install OpenTofu ${{ matrix.opentofu_version }}
        uses: opentofu/setup-opentofu@592200bd4b9bbf4772ace78f887668b1aee8f716 # v1.0.5
        with:
          tofu_version: ~${{ matrix.opentofu_version }}
          tofu_wrapper: false

      - name: Run acceptance tests
        env:
          TF_ACC: 1
          TF_ACC_PROVIDER_NAMESPACE: hashicorp
          TF_ACC_PROVIDER_HOST: registry.opentofu.org
        run: |
          TF_ACC_TERRAFORM_PATH=$(which tofu) \
          go test -run=TestAcc -count=1 -parallel=$(nproc) -timeout 30m -v ./corefuncprovider/...
