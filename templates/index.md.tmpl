---
page_title: "{{ .RenderedProviderName }} Provider"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{ .RenderedProviderName }} Provider

{{ .Description | trimspace }}

~> While it’s common knowledge that Terraform is great at standing up and managing Cloud infrastructure, it’s also good at running _anything with an API_. People regularly manage [code repositories], [DNS records], [feature flags], [identity and access management], [content delivery], [passwords], [monitoring], [alerts], [zero trust network access], [cryptographic signatures], and can even [order a pizza]. This provider is more analogous to HashiCorp’s _utility_ providers such as [local], [external], and [archive].

## Compatibility matrix

Built using the [Terraform Plugin Framework][TPF], which speaks [Terraform Protocol v6][tfproto6].

| Testing type | Details           | Description                                                                    |
|--------------|-------------------|--------------------------------------------------------------------------------|
| integration  | Terraform 1.0–1.13 | Executes the provider with this release, pulling from `registry.terraform.io`. |
| integration  | OpenTofu 1.6–1.10  | Executes the provider with this release, pulling from `registry.opentofu.org`. |
| unit         | Go 1.24–1.25      | Tests using these versions.                                                    |
| mutation     | Go 1.24–1.25      | Tests using these versions.                                                    |
| fuzz         | Go 1.24–1.25      | Tests using these versions.                                                    |
| terratest    | Go 1.24–1.25      | Tests using these versions.                                                    |

## Setting-up the provider

### Data Sources

For users of Terraform 1.0 (and newer), all of the the _Data Source_ implementations are available. Their implementations (inputs, outputs) are consistent with the _Provider Function_ implementations, but exposed as _Data Sources_.

{{ tffile "examples/provider/provider_ds.tf" }}

### Provider Functions

For users of Terraform 1.8/OpenTofu 1.7 (and newer), all of the the _Data Source_ and _Provider Function_ implementations are available. Their implementations (inputs, outputs) are consistent with each other, and will always return the same outputs from the same imputs. _Provider Functions_ require version 1.4.0 (or later) of this provider.

{{ tffile "examples/provider/provider_fn.tf" }}

## Updating your lockfile

Running `terraform init` will download the provider and update the [_Dependency Lock File_](https://developer.hashicorp.com/terraform/language/files/dependency-lock) (`.terraform.lock.hcl`) for your _current_ OS and CPU architecture. If you have a team with multiple operating systems or multiple CPU architectures, the _Dependency Lock File_ will be incomplete, and other members on the team won't be able to use it.

In order to resolve this, you can use the `terraform providers lock` command to generate a _Dependency Lock File_ that is compatible with all relevant operating systems and CPU architectures.

~> **NOTE:** For OpenTofu users, the `terraform` command can be replaced with `tofu`.

### Recommended matrix

Per [Recommended Provider Binary Operating Systems and Architectures](https://developer.hashicorp.com/terraform/registry/providers/os-arch):

{{ codefile "shell" "examples/provider/lock.sh" }}

## Documentation

### Registries

* [registry.terraform.io](https://registry.terraform.io/providers/northwood-labs/corefunc/latest/docs)
* [search.opentofu.org](https://search.opentofu.org/provider/northwood-labs/corefunc/latest)
* [library.tf](https://library.tf/providers/northwood-labs/corefunc/latest)

### Go Package

If you are using this as a Go library, see the documentation at [pkg.go.dev](https://pkg.go.dev/github.com/northwood-labs/terraform-provider-corefunc/corefunc).

## Extras

We've also bundled some CLI commands that you might find as useful as we have.

### JSON → TOML

```bash
terraform-provider-corefunc json2toml file.json > file.toml
```

### TOML → JSON

```bash
terraform-provider-corefunc toml2json file.toml > file.json
```

## Ensuring quality

Northwood Labs takes testing seriously, and quality is a high priority for us. This software undergoes the following types of testing before every release.

### On every commit

* Unit testing of the Go library to ensure that the code behaves (and doesn't behave) as expected.
* Unit testing of the Go library’s documentation examples to ensure that the examples actually work.
* [Mutation testing](https://github.com/gtramontina/ooze) of the Go library to ensure that our tests are good at testing the code (as opposed to chasing code coverage).
* Acceptance testing of the provider (through both Terraform and OpenTofu) which uses [table-driven testing](https://go.dev/wiki/TableDrivenTests) to ensure that the inputs and expected outputs are correct.
* [Terratest](https://terratest.gruntwork.io) tests the provider using the same tools as one might use to test their own Terraform/OpenTofu modules.
* A _very_ strict set of linting rules using [golangci-lint](https://golangci-lint.run).

### On every release

* [Fuzzing](https://go.dev/doc/tutorial/fuzz) of the Go library which throws garbage at the code to ensure edge-cases don't slip through.
* We use the [Bash Automated Testing System](https://bats-core.readthedocs.io) together with [tfschema](https://github.com/minamijoyo/tfschema) to ensure that nothing weird or unexpected occurs with the [Terraform Plugin Protocol](https://developer.hashicorp.com/terraform/plugin/terraform-plugin-protocol) v6 between releases.

### On a regular cadence

Supply-chain testing and validation. Some of these are on every commit, while a couple run before every release.

* [Dependabot](https://github.com/dependabot) with auto-merging (by [GitHub](https://github.com)).
* [Dependency Review](https://github.com/marketplace/actions/dependency-review) (by [GitHub](https://github.com)).
* [Go Dependency Submission](https://github.com/marketplace/actions/go-dependency-submission) (by [GitHub](https://github.com)).
* [govulncheck](https://github.com/marketplace/actions/golang-govulncheck-action) (by [the Go team](https://go.dev)).
* [Harden-Runner](https://github.com/marketplace/actions/harden-runner) (by [StepSecurity](https://stepsecurity.io)).
* [OSSF Scorecard](https://github.com/marketplace/actions/ossf-scorecard-action) (by [OpenSSF](https://openssf.org)).
* [OSV Scanner](https://google.github.io/osv-scanner/github-action/) (by [Google](https://osv.dev)).
* [Trufflehog OSS](https://github.com/marketplace/actions/trufflehog-oss) (by [Truffle Security](https://trufflesecurity.com)).

[alerts]: https://registry.terraform.io/providers/PagerDuty/pagerduty/latest
[archive]: https://registry.terraform.io/providers/hashicorp/archive/latest/docs
[code repositories]: https://registry.terraform.io/providers/integrations/github/latest/docs
[content delivery]: https://registry.terraform.io/providers/fastly/fastly/latest/docs
[cryptographic signatures]: https://registry.terraform.io/providers/chainguard-dev/cosign/latest/docs
[DNS records]: https://registry.terraform.io/providers/infobloxopen/infoblox/latest/docs
[external]: https://registry.terraform.io/providers/hashicorp/external/latest/docs
[feature flags]: https://registry.terraform.io/providers/launchdarkly/launchdarkly/latest/docs
[identity and access management]: https://registry.terraform.io/providers/okta/okta/latest/docs
[local]: https://registry.terraform.io/providers/hashicorp/local/latest/docs
[monitoring]: https://registry.terraform.io/providers/DataDog/datadog/latest
[order a pizza]: https://registry.terraform.io/providers/MNThomson/dominos/latest/docs
[passwords]: https://registry.terraform.io/providers/1Password/onepassword/latest/docs
[tfproto6]: https://developer.hashicorp.com/terraform/plugin/terraform-plugin-protocol#protocol-version-6
[TPF]: https://github.com/hashicorp/terraform-plugin-framework
[zero trust network access]: https://registry.terraform.io/providers/zscaler/zpa/latest/docs

<!-- Preview the provider docs with the Terraform registry provider docs preview tool: https://registry.terraform.io/tools/doc-preview -->
